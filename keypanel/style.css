/* =============================================================================
  #RESET
============================================================================= */
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0;margin:0 0 1em}


/* =============================================================================
  #TOOLS
============================================================================= */
html { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; }
*, *:before, *:after { -webkit-box-sizing: inherit; -moz-box-sizing: inherit; box-sizing: inherit; }

/* =============================================================================
  #CSS VARIABLES
============================================================================= */
:root {
  --background-color: hsl(0deg 0% 21%);
}

/* =============================================================================
  #GENERAL
============================================================================= */
* {
    font-family: inherit;
    line-height: inherit;
    color: inherit;
}

html {
    min-height: 100%;
    height: 100%;

    font-size: 16px;
    font-size: 62.5%;
}

body {
    position: relative;

    display: flex;
    align-items: center;
    justify-content: center;

    min-height: 100vh;
    min-height: -webkit-fill-available;

    font-family: monospace;
    /* font-family: var(--default-font);
    font-size: var(--mobile-font-size-px); font-size: var(--mobile-font-size-rem); */
    color: var(--text-color);
    line-height: 1.1;
  
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    background-color: var(--background-color);
    transition: background-color 0.4s ease-in-out;
    /* background: #e5e5e5; */
}

body:has([data-type*="toggle-color"] input:checked) {
  --background-color: hsl(0, 0%, 90%);
}

body:has([data-type*="toggle-color"] input:checked) [data-form*="keypanel"] {
  box-shadow: none;
}

body:has([data-type*="toggle-color"] input:checked) [data-type="display"] {
  box-shadow: inset 8px 8px 15px rgb(179 179 179 / 65%), 
            inset -8px -8px 15px rgb(255 255 255 / 80%);
}

body:has([data-type*="toggle-color"] input:checked):has(form[data-form="keypanel main"] [data-type*="knob"] input:checked) [data-type="display"] {
  height: 120px;
}

body:has(form[data-form*="main"]:valid):has(form[data-form="container"]:valid):has(form[data-form="keypanel main"] [data-type*="knob"] input:checked) [data-type="display"] img:first-of-type {
  opacity: 0%;
}

body:has(form[data-form*="main"]:valid):has(form[data-form="container"]:valid):has(form[data-form="keypanel main"] [data-type*="knob"] input:checked) [data-type="display"] img:last-of-type {
  opacity: 100%;
  z-index: 550;
}

body:has(form[data-form*="main"]:valid):has([data-type*="toggle-display"] input:checked):has([data-type*="toggle-color"] input:checked):has(form[data-form="keypanel main"] [data-type*="knob"] input:checked) [data-type="display"] span {
  background-color: #fefafe;
}

@media (prefers-reduced-motion: no-preference) {
  body:has(form[data-form*="main"]:valid):has(form[data-form="container"]:valid):has(form[data-form="keypanel main"] [data-type*="knob"] input:checked) main {
      animation: shake 200ms ease-in-out infinite;
  }

  @keyframes shake {
      0% {
          transform: translateY(0);
      }
      25% {
          transform: translateY(16px);
      }
      50% {
          transform: translateY(-16px);
      }
      75% {
          transform: translateY(16px);
      }
      100% {
          transform: translateY(0);
      }
  }
}


/* =============================================================================
  #TYPOGRAPHY
============================================================================= */
h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  line-height: 1.1;
}

/* =============================================================================
  #MAIN
============================================================================= */
main {
  padding: 30px;

  display: flex;
  flex-direction: column;
  align-items: center;
}


main > section {
  position: fixed;
  inset: 0;

  display: flex;
  align-items: center;
  justify-content: center;

  background-color: var(--background-color);
  z-index: 1000;

  pointer-events: none;

  animation: hideLoader .6s ease-in-out forwards 1.5s;
}

/* SOURCE: https://loading.io/css/ */
main > section > div {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

main > section > div > div {
  position: absolute;
  top: 33px;
  width: 13px;
  height: 13px;
  border-radius: 50%;
  background: hsl(0deg 0% 51%);
  animation-timing-function: cubic-bezier(0, 1, 1, 0);
}

main > section > div > div:nth-child(1) {
  left: 8px;
  animation: lds-ellipsis1 0.6s infinite;
}
main > section > div > div:nth-child(2) {
  left: 8px;
  animation: lds-ellipsis2 0.6s infinite;
}
main > section > div > div:nth-child(3) {
  left: 32px;
  animation: lds-ellipsis2 0.6s infinite;
}
main > section > div > div:nth-child(4) {
  left: 56px;
  animation: lds-ellipsis3 0.6s infinite;
}

@keyframes lds-ellipsis1 {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}
@keyframes lds-ellipsis3 {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}
@keyframes lds-ellipsis2 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(24px, 0);
  }
}

@keyframes hideLoader {

    0% {
      opacity: 100%;
    }

    90% {
      opacity: 0;
    }
  
    100% {
      display: none;
      opacity: 0%;
    }
}
/* =============================================================================
  #FORM
============================================================================= */
form, [data-form*="keypanel"] {
  position: relative;
  display: flex;
  gap: 6px;

  padding: 8px;
  border-radius: 14px;

  width: min-content;

  z-index: 50;
}

  [data-form*="keypanel"] {
    overflow: hidden;

    background-color: #353535;
    box-shadow: 4px 4px 4px 2px hsl(0deg 0% 15% / 60%), 
    -4px -4px 4px 2px hsl(0deg 0% 15% / 60%);
      transition: box-shadow 0.4s ease-in-out;
    /* box-shadow: 0px 0px 5px 0px rgb(0 0 0 / 25%) inset, 
                3px 3px 6px 0px rgb(195, 195, 195); */
  }

  [data-form="container"] {
    flex-direction: column;
    align-items: center;

    gap: 26px;
  }

form + form, [data-form*="keypanel"] + [data-form*="keypanel"] {
  margin-top: 16px;
}

form > * {
  border-radius: 10px;
}

/* =============================================================================
  #FORM KEYS
============================================================================= */
  /* Has 'keywrap' somewhere in data attr */
  [data-type*="keywrap"] {
    position: relative;
    width: 80px;
    height: 80px;

    cursor: pointer;
  }

  /* Button wrapper */
  [data-type*="keywrap"] > *:first-of-type {
    display: flex;
    position: relative;
    width: 100%;
    height: 100%;

    padding: 10px;

    background-color: hsl(0deg 0% 28%);
    /* background-color: #616161; */
    border-radius: 10px;

    box-shadow: 0px 0px 5px 1px hsl(0deg 0% 22%) inset, 
                  0px 0px 4px 4px hsl(0deg 0% 15%);
    /* box-shadow: 0px 0px 5px 1px rgb(73 73 73 / 79%) inset, 
                3px 3px 2px 2px rgb(29 29 29); */
    border: 3px solid hsl(0deg 0% 28%);
    transform: scale(1);

    cursor: pointer;
    transition: all 250ms ease-in-out;
    z-index: 300;
  }

  /* #KEYWRAP STYLING */
  /* All children of button wrapper */
  [data-type*="keywrap"] > * {
    cursor: pointer;
  }

  [data-type*="keywrap"]::before {
    content: '';
    position: absolute;

    pointer-events: none;

    top: -3px;
    bottom: -3px;

    left: -20px;
    right: -20px;

    height: auto;

    transform: scale(1);

    background: linear-gradient(90deg, 
                transparent 0%, rgb(47 47 47 / 60%) 20%,
                rgb(47 47 47 / 60%) 80%, 
                transparent 100%);

    opacity: 100%;
    z-index: 200;
  }

  /* Reset tabbing style */
  [data-type*="keywrap"]:has(input:focus) > label {
    border: 3px solid transparent;
  }

  /* Tabbing style */
  [data-type*="keywrap"]:has(input:focus-visible) > label {
    border: 3px solid #949494;
  }

  /* #KNOB STYLING */
  [data-type="keywrap knob"] > *:first-of-type {
    padding: 6px;
  }

  [data-type="keywrap knob"] {
    position: absolute;
    opacity: 0;

    width: 0;
  }

  /* CHECK USER-VALID */
  form:valid > [data-type="keywrap knob"] {
    position: relative;
    width: 80px;
    opacity: 100%;

    animation: widthAnimation 400ms forwards;
  }

  form:valid > [data-type="keywrap knob"] > label {
    transform: scale(.1);
    animation: scaleAnimation 450ms forwards;
  }

  form:not(:valid) > [data-type="keywrap knob"] {
    position: relative;
    opacity: 100%;
    width: 80px;

    animation: widthUndoAnimation 500ms forwards 250ms;
  }

  form:not(:valid) > [data-type="keywrap knob"] > label {
    animation: scaleUndoAnimation 450ms forwards;
    transform: scale(1);
  }
  
  [data-type="keywrap knob"] > label {
    transform: scale(.1);
  }

    [data-type*="knob"] > *:first-of-type > div {
      position: relative;
      display: flex;
      background-color: #808080;

      background: linear-gradient(345deg, hsl(0deg 0% 22%), hsl(0deg 0% 43%));

      padding: 6px;
      width: 100%;
      height: 100%;

      border-radius: 50%;
      box-shadow: 2px 2px 2px 0px rgb(0 0 0 / 25%), 
                  0px 0px 3px 1px rgb(0 0 0 / 50%) inset;

      transition: transform 250ms ease-in-out;
    }

    [data-type*="knob"] > *:first-of-type > span {
      position: absolute;
      
      display: block;
      top: 0;
      left: 50%;
      transform: translateX(-50%);
      
      width: 4px;
      height: 100%;

      border-radius: 10px;
      
      background-color: hsl(0deg 0% 20%);
    }

      [data-type*="knob"] > *:first-of-type > span::before {
        content: "";
        position: absolute;

        top: 0;
        left: 50%;
        transform: translateX(-50%) rotate(90deg);

        border-radius: 10px;
        width: 4px;
        background-color: hsl(0deg 0% 20%);

        height: 100%;
      }

      [data-type*="knob"] > *:first-of-type > span:last-of-type {
        transform: translateX(-50%) rotate(45deg);
      }


      [data-type*="knob"] > *:first-of-type > div > span {
        width: 100%;
        height: 100%;

        background-color: #6e6e6e;
        background: linear-gradient(#6e6e6e, #6e6e6e);

        border-radius: 50%;

        box-shadow: 0px 0px 4px 2px rgb(0 0 0 / 33%), 
                    -1px -2px 2px 0px rgb(65 65 65 / 76%) inset;
        /* border: 1px solid #555555; */
      }

      [data-type*="knob"] > *:first-of-type > div > span > span {
        display: flex;
        width: 100%;
        height: 100%;

        padding-top: 4px;

        justify-content: center;
        transition: all 250ms ease-in-out;
      }

        [data-type*="knob"] > *:first-of-type > div > span > span::before {
          display: block;
          content: "";
          position: relative;

          width: 14px;
          height: 14px;

          border-radius: 50%;

          background-color: hsl(0deg 0% 58%);
          box-shadow: 1px 1px 2px 0px hsl(0deg 0% 0% / 48%) inset;
          border: 1px solid hsl(0, 0%, 46%);
        }

        [data-type*="knob"] input:checked ~ div > span > span {
          transform: rotate(0deg);
          animation: btnRotation 1.5s forwards;
        }

        [data-type*="knob"] input:not(:checked) ~ div > span > span {
          transform: rotate(130deg);
          animation: btnRotationReverse 1.5s forwards reverse;
        }

        @keyframes btnRotation {
          0% { transform: rotate(0deg); }
          20% { transform: rotate(40deg); }
          25% { transform: rotate(42deg); }
          30% { transform: rotate(40deg); }
          50% { transform: rotate(90deg); }
          55% { transform: rotate(92deg); }
          60% { transform: rotate(90deg); }
          80% { transform: rotate(130deg); }
          85% { transform: rotate(132deg); }
          100% { transform: rotate(130deg); }
        }

        @keyframes btnRotationReverse {
          0% { transform: rotate(0deg); }
          20% { transform: rotate(40deg); }
          25% { transform: rotate(42deg); }
          30% { transform: rotate(40deg); }
          50% { transform: rotate(90deg); }
          55% { transform: rotate(92deg); }
          60% { transform: rotate(90deg); }
          80% { transform: rotate(130deg); }
          85% { transform: rotate(132deg); }
          100% { transform: rotate(130deg); }
        }


  /* #CHECKBOX STYLING */
/* Apply the keyframe animation when the checkbox is checked */
[data-type*="checkbox"]:has(input:checked)::before {
  animation: hideShadow 250ms forwards;
  opacity: 0;
}

/* Pause or reset the animation when the checkbox is unchecked */
[data-type*="checkbox"]:has(input:not(:checked))::before {
  animation: revealShadow 250ms forwards;
  opacity: 100%;
}

    /* Button clicked */
    [data-type*="checkbox"]:has(input:checked) > label {
      transform: scale(0.97);
      box-shadow: 0px 0px 5px 1px hsl(0deg 0% 22%) inset, 
                  0px 0px 6px 2px hsl(0deg 0% 15%);

      /* box-shadow: 0px 0px 5px 1px rgb(73 73 73 / 79%) inset, 
                  0px 0px 6px 2px rgb(29 29 29); */
    }

    [data-type*="checkbox"]:has(input:checked) > label {
      animation: decreaseZindex 250ms forwards 250ms;
    }

    /* Hiding the actual input visually */
    input[type="checkbox"] {
      opacity: 0;
      position: absolute;

      inset: 0;
      margin: 0;
      cursor: pointer;
    }

    /* Clickable label: holds the circle */
    /* Specific styling for checkbox */
    [data-type="keywrap checkbox"] input[type="checkbox"] + div {
      position: relative;
      width: 100%;
      height: 100%;

      display: flex;
      align-items: center;
      justify-content: center;

      border-radius: 50px;
      border: 5px solid hsl(0deg 0% 36%);
      box-shadow: 3px 4px 8px 0px hsl(0deg 0% 23% / 73%);

      z-index: 400;
    }

    [data-type="keywrap checkbox"] input[type="checkbox"] + div > div {
      width: 100%;
      height: 100%;

      border-radius: 50%;
      border: 1px solid hsl(0deg 0% 41%);
    
      padding: 35%;
    
      background: linear-gradient(45deg, hsl(0deg 0% 61% / 94%), hsl(0deg 0% 26%) 80%);    
    }

    [data-type="keywrap checkbox"] input[type="checkbox"] + div > div span {
      display: block;

      width: 100%;
      height: 100%;

      border-radius: 50%;

      border: 1px solid #686868;
      background-color: #565656;
      box-shadow: 0px 0px 5px 1px transparent,
                  0px 1px 2px 1px #474747 inset;

      transition: all 250ms ease-in-out;
    }

    [data-type="keywrap checkbox"] input[type="checkbox"]:checked + div > div span {
      border: 1px solid transparent;
      background-color: #01ff56;
      box-shadow: 0px 0px 5px 1px #01ff56,
                  0px 1px 2px 1px transparent inset;
    }

/* =============================================================================
  #DISPLAY
============================================================================= */
[data-type="display"] {
  display: flex;

  /* width: 172px; */
  width: 73px;
  height: 73px;

  padding: 0px;

  box-shadow: inset 20px 20px 23px hsl(0deg 0% 17%), 
              inset -20px -20px 23px hsl(0deg 0% 25%);
  /* box-shadow: inset 8px 8px 15px rgb(179 179 179 / 65%), 
              inset -8px -8px 15px rgb(255 255 255 / 80%); */
  
  transition: padding 450ms ease-in-out, box-shadow 0.4s ease-in-out, height 0.4s ease-in-out;
}

  [data-type="display"] > div {
    position: relative;

    width: 100%;
    height: 100%;

    overflow: hidden;

    /* background-color: #353535; */
    border-radius: 7px;
  }

    [data-type="display"] img {
      opacity: 0%;
      width: 100%;
      height: 100%;
    }

    [data-type="display"] img:first-of-type {
        position: relative;
        z-index: 100;
    }

    [data-type="display"] img:last-of-type {
        opacity: 0%;
        position: absolute;
        top: 50%;
        left: 50%;
        width: auto;
        height: 156px;
        transform: translate(-50%, -50%);
    }

    [data-type="display"] span {
      content: "";
      position: absolute;

      inset: 0;
      padding: 8px;

      
      width: 100%;
      height: 100%;
      
      background-color: var(--background-color);
      mix-blend-mode: normal;

      transition: all 0.4s ease-in-out;
      z-index: 500;
    }

    form[data-form="keypanel main"]:has([data-type="keywrap checkbox"] input:checked):has([data-type*="knob"] input:checked) + form:has([data-type="display"]):has([data-type*="toggle-display"] input:checked) > [data-type="display"] span {
      mix-blend-mode: lighten;
    }

    form[data-form="keypanel main"]:has([data-type="keywrap checkbox"] input:checked):has([data-type*="knob"] input:checked) + form:has([data-type="display"]):has([data-type*="toggle-display"] input:checked) > [data-type="display"] img:first-of-type {
      opacity: 100%;
    }


  form[data-form*="keypanel"]:valid + form[data-form="container"] > [data-type="display"] {
    padding: 8px;
  }

  form[data-form*="keypanel"]:has([data-type*="knob"] input:checked) + form[data-form="container"] > [data-type="display"] {
    animation: displayWidthAnimation 1.5s forwards;
  }

  form[data-form*="keypanel"]:has([data-type*="knob"] input:not(:checked)) + form[data-form="container"] > [data-type="display"] {
    animation: displayUndoWidthAnimation 1.5s forwards reverse;
  }

    @keyframes displayWidthAnimation {
      0% {    width: 73px; }
      25% {   width: 95px; }
      50% {   width: 130px; }
      100% {  width: 172px; }
    }
    @keyframes displayUndoWidthAnimation {
      0% {    width: 73px; }
      25% {   width: 95px; }
      50% {   width: 130px; }
      100% {  width: 172px; }
    }
  
  [data-form="container"] > [data-form*="keypanel"] {
    opacity: 0;
    transform: scale(.1);
  }

form[data-form="keypanel main"]:has([data-type="keywrap checkbox"] input:checked):has([data-type*="knob"] input:checked) + form[data-form="container"] > [data-form*="keypanel"] {
  animation: widthAnimation2 400ms forwards 1.35s, 
            scaleAnimation 450ms forwards 1.35s, 
            revealShadow 450ms forwards 1.35s;
}

form[data-form="keypanel main"]:has([data-type*="knob"] input:not(:checked)) + form[data-form="container"] > [data-form*="keypanel"],
form[data-form="keypanel main"]:has([data-type="keywrap checkbox"] input:not(:checked)) + form[data-form="container"] > [data-form*="keypanel"] {
  animation: widthAnimation2Undo 400ms forwards reverse 1.5s, 
            scaleUndoAnimation 450ms forwards, 
            hideShadow 450ms forwards;
}

@keyframes widthAnimation2 {
  0% {
    width: 0px;
  }

  100%{
    opacity: 100%;
    width: calc(50 + 12px);
  }
}
@keyframes widthAnimation2Undo {
  0% {
    width: 0px;
  }

  100%{
    opacity: 100%;
    width: calc(50 + 12px);
  }
}
/* =============================================================================
  #TOGGLE
============================================================================= */
[data-form*="toggle"] {
  border-radius: 10px;
  width: 100%;
  justify-content: center;
}

[data-type*="toggle"] {
    height: 55px;
    width: 50%;
}

[data-type*="toggle"]::before {
  display: none;
}

[data-type*="toggle"] label {
  padding-bottom: 20px!important;
}

[data-type*="toggle"] label > span {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 5px;

  text-align: center;
  color: hsl(0deg 0% 15%);
  text-transform: uppercase;
  font-size: 10px; font-size: 1.0rem;
  font-weight: 700;

  transition: color 0.4s ease-in-out;

}

/* the toggle */
[data-type*="toggle"] label > div {
  display: block;
  
  width: 100%;
  height: 100%;

  overflow: hidden;

  border-radius: 33px;
  background: #353535;
  box-shadow: -5px -5px 13px 0px rgb(0 0 0 / 30%) inset, 
              5px 5px 13px rgb(0 0 0 / 30%) inset;
  transition: background-color 0.4s cubic-bezier(0.85, 0.05, 0.18, 1.35);
}

[data-type*="toggle"] label > div > div {
  height: 100%;
  width: 200%;
  /* width: 25px; */
  background: hsl(0deg 0% 50%);
  border-radius: 25px;
  transform: translate3d(-75%, 0, 0);
  transition: transform 0.4s cubic-bezier(0.85, 0.05, 0.18, 1.35);
  box-shadow: -8px -4px 8px 0px rgb(0 0 0 / 21%), 
              8px 4px 12px 0px rgb(0 0 0 / 33%),
              0px 0px 6px 1px hsl(0deg 0% 20% / 50%) inset;
}

[data-type*="toggle"] input:checked ~ div {
  transform: translate3d(25%, 0, 0);
}

[data-type*="toggle"]:has( input:checked) label > div {
  background-color: #03ff55;

  box-shadow: 0px 0px 4px 1px #01ff56, 
              -5px -5px 13px 0px rgb(0 0 0 / 30%) inset, 
              5px 5px 13px rgb(0 0 0 / 30%) inset;
}

[data-type*="toggle"]:has( input:checked) label > div > div {
  background: hsl(0deg 0% 100%);
  box-shadow: -8px -4px 8px 0px hsl(140deg 100% 35%), 8px 4px 12px 0px hsl(140deg 100% 35%), 0px 0px 6px 1px hsl(140deg 100% 41%) inset;
}

[data-type*="toggle"]:has(input:checked) label > span {
  color: #03ff55;
  text-shadow: 0px 0px 1px #03ff55;
}

/* =============================================================================
  #ANIMATIONS
============================================================================= */
/* Define the keyframe animation */
@keyframes hideShadow {
  from { 
    opacity: 100%; 
  }
  to { 
    opacity: 0%;
  }
}

@keyframes revealShadow {
  from { 
    opacity: 0%;
  }
  to { 
    opacity: 100%; 
  }
}

@keyframes decreaseZindex {
  from { 
    z-index: 200;
  }
  to { 
    z-index: 100;
  }
}

@keyframes increaseZindex {
  from { 
    z-index: 200;
  }
  to { 
    z-index: 100;
  }
}

@keyframes widthAnimation {
  0% {
    position: absolute;
    width: 0px;
  }

  75% {
    position: relative;
    z-index: 300;
  }

  100%{
    position: relative;
    opacity: 100%;
    width: 80px;
    z-index: 300;
  }
}

  @keyframes widthUndoAnimation {
    0% {
      position: relative;
      opacity: 100%;
      width: 80px;
    }

    75% {
      position: absolute;
      opacity: 0;
      width: 0px;
    }

    100%{
      position: absolute;
      opacity: 0;
      width: 0;
    }
  }

  @keyframes scaleAnimation {
    0% {
      transform: scale(.1);
    }

    20% {
      transform: scale(.12);
    }

    75% {
      transform: scale(1.05);
    }

    100%{
      transform: scale(1);
    }
  }
  
  @keyframes scaleUndoAnimation {
    0% {
      transform: scale(1);
    }

    20% {
      transform: scale(1.05);
    }

    75% {
      transform: scale(.12);
    }

    100%{
      transform: scale(.1);
    }
  }