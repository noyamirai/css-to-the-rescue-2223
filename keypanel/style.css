/* =============================================================================
  #RESET
============================================================================= */
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0;margin:0 0 1em}


/* =============================================================================
  #TOOLS
============================================================================= */
html { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; }
*, *:before, *:after { -webkit-box-sizing: inherit; -moz-box-sizing: inherit; box-sizing: inherit; }

/* =============================================================================
  #CSS VARIABLES
============================================================================= */
:root {

}

/* =============================================================================
  #GENERAL
============================================================================= */
* {
    font-family: inherit;
    line-height: inherit;
    color: inherit;
}

html {
    min-height: 100%;
    height: 100%;

    font-size: 16px;
    font-size: 62.5%;
}

body {
    position: relative;

    display: flex;
    align-items: center;
    justify-content: center;

    min-height: 100vh;
    min-height: -webkit-fill-available;

    /* font-family: var(--default-font);
    font-size: var(--mobile-font-size-px); font-size: var(--mobile-font-size-rem); */
    color: var(--text-color);
    line-height: 1.6;
  
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    background: #e5e5e5;
}

/* =============================================================================
  #TYPOGRAPHY
============================================================================= */
h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  line-height: 1.1;
}

/* =============================================================================
  #MAIN
============================================================================= */
main {
  padding: 30px;
}

/* =============================================================================
  #PANEL
============================================================================= */
/* Panel container */
form {
  position: relative;
  display: flex;
  gap: 6px;

  padding: 6px;
  border-radius: 14px;
  overflow: hidden;

  background-color: #353535;

  box-shadow: 0px 0px 5px 0px rgb(0 0 0 / 25%) inset, 
              3px 3px 6px 0px rgb(195, 195, 195);

  z-index: 50;
}

  /* Has 'keywrap' somewhere in data attr */
  [data-type*="keywrap"] {
    position: relative;
    width: 80px;
    height: 80px;
  }

  /* Button wrapper */
  [data-type*="keywrap"] > *:first-of-type {
    display: flex;
    position: relative;
    width: 100%;
    height: 100%;

    padding: 10px;

    background-color: #616161;
    border-radius: 10px;

    box-shadow: 0px 0px 5px 1px rgb(73 73 73 / 79%) inset, 
                3px 3px 2px 2px rgb(29 29 29);
    border: 3px solid transparent;
    transform: scale(1);

    cursor: pointer;
    transition: all 250ms ease-in-out;
    z-index: 300;
  }

  [data-type="keywrap knob"] > *:first-of-type {
    padding: 6px;
  }

  form:valid > [data-type="keywrap knob"] {
    position: relative;
    width: 80px;
    opacity: 100%;

    animation: widthAnimation 400ms forwards;
  }

  [data-type="keywrap knob"] {
    position: absolute;
    opacity: 0;

    width: 0;
  }


  form:valid > [data-type="keywrap knob"] > label {
    transform: scale(.1);
    animation: scaleAnimation 450ms forwards;
  }

  /* form:has(input[name="power_btn"]:not(:checked)) > [data-type="keywrap knob"] {
    position: relative;
    opacity: 100%;
    width: 80px;

    animation: widthUndoAnimation 500ms forwards 250ms;
  } */

  

  /* form:not(:valid) > [data-type="keywrap knob"] > label {
    animation: scaleUndoAnimation 450ms forwards;
    transform: scale(1);
  } */

  
  [data-type="keywrap knob"] > label {
    transform: scale(.1);
  }

    [data-type*="knob"] > *:first-of-type > div {
      position: relative;
      display: flex;
      background-color: #808080;

      background: linear-gradient(345deg, #434343, #787878);

      padding: 6px;
      width: 100%;
      height: 100%;

      border-radius: 50%;
      box-shadow: 2px 2px 2px 0px rgb(0 0 0 / 25%), 
                  0px 0px 3px 1px rgb(0 0 0 / 50%) inset;

      transition: transform 250ms ease-in-out;
    }

    [data-type*="knob"] > *:first-of-type > span {
      position: absolute;
      
      display: block;
      top: 0;
      left: 50%;
      transform: translateX(-50%);
      
      width: 4px;
      height: 100%;

      border-radius: 10px;
      
      background-color: #414141;
    }

      [data-type*="knob"] > *:first-of-type > span::before {
        content: "";
        position: absolute;

        top: 0;
        left: 50%;
        transform: translateX(-50%) rotate(90deg);

        border-radius: 10px;
        width: 4px;
        background-color: #414141;

        height: 100%;
      }

      [data-type*="knob"] > *:first-of-type > span:last-of-type {
        transform: translateX(-50%) rotate(45deg);
      }


      [data-type*="knob"] > *:first-of-type > div > span {
        width: 100%;
        height: 100%;

        background-color: #6e6e6e;
        background: linear-gradient(#6e6e6e, #6e6e6e);

        border-radius: 50%;

        box-shadow: 0px 0px 4px 2px rgb(0 0 0 / 33%), 
                    -1px -2px 2px 0px rgb(65 65 65 / 76%) inset;
        /* border: 1px solid #555555; */
      }

      [data-type*="knob"] > *:first-of-type > div > span > span {
        display: flex;
        width: 100%;
        height: 100%;

        padding-top: 4px;

        justify-content: center;
        transition: all 250ms ease-in-out;
      }

        [data-type*="knob"] > *:first-of-type > div > span > span::before {
          display: block;
          content: "";
          position: relative;

          width: 14px;
          height: 14px;

          border-radius: 50%;

          background-color: #848484;
          box-shadow: 1px 1px 2px 0px rgb(0 0 0 / 43%) inset;
          border: 1px solid #757575;
        }

        [data-type*="knob"] input:checked ~ div > span > span {
          transform: rotate(0deg);
          animation: btnRotation 1.5s forwards;
        }

        [data-type*="knob"] input:not(:checked) ~ div > span > span {
          transform: rotate(130deg);
          animation: btnRotationReverse 1.5s forwards reverse;
        }

        @keyframes btnRotation {
          0% { transform: rotate(0deg); }
          20% { transform: rotate(40deg); }
          25% { transform: rotate(42deg); }
          30% { transform: rotate(40deg); }
          50% { transform: rotate(90deg); }
          55% { transform: rotate(92deg); }
          60% { transform: rotate(90deg); }
          80% { transform: rotate(130deg); }
          85% { transform: rotate(132deg); }
          100% { transform: rotate(130deg); }
        }

        @keyframes btnRotationReverse {
          0% { transform: rotate(0deg); }
          20% { transform: rotate(40deg); }
          25% { transform: rotate(42deg); }
          30% { transform: rotate(40deg); }
          50% { transform: rotate(90deg); }
          55% { transform: rotate(92deg); }
          60% { transform: rotate(90deg); }
          80% { transform: rotate(130deg); }
          85% { transform: rotate(132deg); }
          100% { transform: rotate(130deg); }
        }


  /* All children of button wrapper */
  [data-type*="keywrap"] > * {
    cursor: pointer;
  }

  [data-type*="keywrap"]::before {
    content: '';
    position: absolute;

    pointer-events: none;

    top: -3px;
    bottom: -3px;

    left: -20px;
    right: -20px;

    height: auto;

    transform: scale(1);

    background: linear-gradient(90deg, 
                transparent 0%, rgb(47 47 47 / 60%) 20%,
                rgb(47 47 47 / 60%) 80%, 
                transparent 100%);

    opacity: 100%;
    z-index: 200;
  }

/* Apply the keyframe animation when the checkbox is checked */
[data-type*="checkbox"]:has(input:checked)::before {
  animation: hideShadow 250ms forwards;
  opacity: 0;
}

/* Pause or reset the animation when the checkbox is unchecked */
[data-type*="checkbox"]:has(input:not(:checked))::before {
  animation: revealShadow 250ms forwards;
  opacity: 100%;
}

    /* Button clicked */
    [data-type*="checkbox"]:has(input:checked) > label {
      transform: scale(0.97);
      box-shadow: 0px 0px 5px 1px rgb(73 73 73 / 79%) inset, 
                  0px 0px 6px 2px rgb(29 29 29);
    }

    [data-type*="checkbox"]:has(input:checked) > label {
      animation: decreaseZindex 250ms forwards 250ms;
    }

    /* Reset tabbing style */
    [data-type*="keywrap"]:has(input:focus) > label {
      border: 3px solid transparent;
    }

    /* Tabbing style */
    [data-type*="keywrap"]:has(input:focus-visible) > label {
      border: 3px solid #949494;
    }

    /* Hiding the actual input visually */
    input[type="checkbox"] {
      opacity: 0;
      position: absolute;

      inset: 0;
      margin: 0;
    }

    /* Clickable label: holds the circle */
    /* Specific styling for checkbox */
    [data-type="keywrap checkbox"] input[type="checkbox"] + div {
      position: relative;
      width: 100%;
      height: 100%;

      display: flex;
      align-items: center;
      justify-content: center;

      border-radius: 50px;
      border: 5px solid #6e6e6e;

      outline: 1px solid #616161;

      box-shadow: 3px 4px 8px 0px rgba(58, 58, 58, 0.729);
      z-index: 400;
    }

    [data-type="keywrap checkbox"] input[type="checkbox"] + div > div {
      width: 100%;
      height: 100%;

      border-radius: 50%;
      border: 1px solid #757575;

      padding: 35%;

      background: linear-gradient(45deg, rgb(170 170 170 / 94%), rgb(63 63 63) 80%);
    }

    [data-type="keywrap checkbox"] input[type="checkbox"] + div > div span {
      display: block;

      width: 100%;
      height: 100%;

      border-radius: 50%;

      border: 1px solid #686868;
      background-color: #565656;
      box-shadow: 0px 0px 5px 1px transparent,
                  0px 1px 2px 1px #474747 inset;

      transition: all 250ms ease-in-out;
    }

    [data-type="keywrap checkbox"] input[type="checkbox"]:checked + div > div span {
      border: 1px solid transparent;
      background-color: #01ff56;
      box-shadow: 0px 0px 5px 1px #01ff56,
                  0px 1px 2px 1px transparent inset;
    }

  /* Define the keyframe animation */
@keyframes hideShadow {
  from { 
    opacity: 100%; 
  }
  to { 
    opacity: 0%;
  }
}

@keyframes revealShadow {
  from { 
    opacity: 0%;
  }
  to { 
    opacity: 100%; 
  }
}

@keyframes decreaseZindex {
  from { 
    z-index: 200;
  }
  to { 
    z-index: 100;
  }
}

@keyframes increaseZindex {
  from { 
    z-index: 200;
  }
  to { 
    z-index: 100;
  }
}

@keyframes widthAnimation {
    0% {
      position: absolute;
      width: 0px;
    }

    75% {
      position: relative;
      z-index: 300;
    }

    100%{
      position: relative;
      opacity: 100%;
      width: 80px;
      z-index: 300;
    }
  }

  @keyframes widthUndoAnimation {
    0% {
      position: relative;
      opacity: 100%;
      width: 80px;
    }

    75% {
      position: absolute;
      opacity: 0;
      width: 0px;
    }

    100%{
      position: absolute;
      opacity: 0;
      width: 0;
    }
  }

  @keyframes scaleAnimation {
    0% {
      transform: scale(.1);
    }

    20% {
      transform: scale(.12);
    }

    75% {
      transform: scale(1.05);
    }

    100%{
      transform: scale(1);
    }
  }
  
  @keyframes scaleUndoAnimation {
    0% {
      transform: scale(1);
    }

    20% {
      transform: scale(1.05);
    }

    75% {
      transform: scale(.12);
    }

    100%{
      transform: scale(.1);
    }
  }